name : Continuous Integration and Delivery

on: [push]

env:
    IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[A-Z]' '[a-z]')/summarizer

jobs:
    build:
        name: Build Docker Image
        permissions: write-all
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  ref: main
            - name: Log in to Github Packages
              run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin ghcr.io
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Pull image
              run: |
                  docker pull ${{ env.IMAGE }}:latest || true
            - name: Build Image
              run: |
                  docker build \
                  --cache-from ${{ env.IMAGE }}:latest \
                  --tag ${{ env.IMAGE }}:latest \
                  --file ./fast_project/Dockerfile.prod \
                  "./fast_project"
            - name: Push image
              run: |
                  docker push ${{ env.IMAGE }}:latest

    test:
        name: Test docker Image
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                ref: main
            - name: Log in Github Packages
              run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin ghcr.io
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Pull image
              run: |
                docker pull ${{ env.IMAGE }}:latest || true
            - name: Build image
              run: |
                docker build \
                  --cache-from ${{ env.IMAGE }}:latest \
                  --tag ${{ env.IMAGE }}:latest \
                  --file ./fast_project/Dockerfile.prod \
                  "./fast_project"
            - name: Run container
              run: |
                docker run \
                  -d \
                  --name fastapi-tdd \
                  -e PORT=8765 \
                  -e ENVIRONMENT=dev \
                  -e DATABASE_URL=sqlite://sqlite.db \
                  -e DATABASE_TEST_URL=sqlite://sqlite.db \
                  -p 5003:8765 \
                  ${{ env.IMAGE }}:latest
            - name: Pytest
              run: docker exec fastapi-tdd python -m pytest .

            - name: Flake8
              run: docker exec fastapi-tdd python -m flake8 .

            - name: Black
              run: docker exec fastapi-tdd python -m black . --check

            - name: Ruff
              uses: chartboost/ruff-action@v1
              with:
                args: 'format --check'